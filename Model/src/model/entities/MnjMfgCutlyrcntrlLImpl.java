package model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 30 16:35:18 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgCutlyrcntrlLImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        CutNo {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getCutNo();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setCutNo((String)value);
            }
        }
        ,
        MarkerId {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMarkerId();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setMarkerId((String)value);
            }
        }
        ,
        StartTime {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getStartTime();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setStartTime((Date)value);
            }
        }
        ,
        EndTime {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getEndTime();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setEndTime((Date)value);
            }
        }
        ,
        MinEndBit {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMinEndBit();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setMinEndBit((Number)value);
            }
        }
        ,
        MinBunQty {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMinBunQty();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setMinBunQty((Number)value);
            }
        }
        ,
        MaxBunQty {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMaxBunQty();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setMaxBunQty((Number)value);
            }
        }
        ,
        TimeCal {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getTimeCal();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setTimeCal((String)value);
            }
        }
        ,
        ActualConsumption {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getActualConsumption();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setActualConsumption((Number)value);
            }
        }
        ,
        MnjMfgCutlyrcntrlD {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMnjMfgCutlyrcntrlD();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgCutlyrcntrlH {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMnjMfgCutlyrcntrlH();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setMnjMfgCutlyrcntrlH((MnjMfgCutlyrcntrlHImpl)value);
            }
        }
        ,
        MnjMfgCutlyrcntrlBndLEO {
            public Object get(MnjMfgCutlyrcntrlLImpl obj) {
                return obj.getMnjMfgCutlyrcntrlBndLEO();
            }

            public void put(MnjMfgCutlyrcntrlLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgCutlyrcntrlLImpl object);

        public abstract void put(MnjMfgCutlyrcntrlLImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int CUTNO = AttributesEnum.CutNo.index();
    public static final int MARKERID = AttributesEnum.MarkerId.index();
    public static final int STARTTIME = AttributesEnum.StartTime.index();
    public static final int ENDTIME = AttributesEnum.EndTime.index();
    public static final int MINENDBIT = AttributesEnum.MinEndBit.index();
    public static final int MINBUNQTY = AttributesEnum.MinBunQty.index();
    public static final int MAXBUNQTY = AttributesEnum.MaxBunQty.index();
    public static final int TIMECAL = AttributesEnum.TimeCal.index();
    public static final int ACTUALCONSUMPTION = AttributesEnum.ActualConsumption.index();
    public static final int MNJMFGCUTLYRCNTRLD = AttributesEnum.MnjMfgCutlyrcntrlD.index();
    public static final int MNJMFGCUTLYRCNTRLH = AttributesEnum.MnjMfgCutlyrcntrlH.index();
    public static final int MNJMFGCUTLYRCNTRLBNDLEO = AttributesEnum.MnjMfgCutlyrcntrlBndLEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgCutlyrcntrlLImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.MnjMfgCutlyrcntrlL");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for CutNo, using the alias name CutNo.
     * @return the CutNo
     */
    public String getCutNo() {
        return (String)getAttributeInternal(CUTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CutNo.
     * @param value value to set the CutNo
     */
    public void setCutNo(String value) {
        setAttributeInternal(CUTNO, value);
    }

    /**
     * Gets the attribute value for MarkerId, using the alias name MarkerId.
     * @return the MarkerId
     */
    public String getMarkerId() {
        return (String)getAttributeInternal(MARKERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkerId.
     * @param value value to set the MarkerId
     */
    public void setMarkerId(String value) {
        setAttributeInternal(MARKERID, value);
    }

    /**
     * Gets the attribute value for StartTime, using the alias name StartTime.
     * @return the StartTime
     */
    public Date getStartTime() {
        return (Date)getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartTime.
     * @param value value to set the StartTime
     */
    public void setStartTime(Date value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for EndTime, using the alias name EndTime.
     * @return the EndTime
     */
    public Date getEndTime() {
        return (Date)getAttributeInternal(ENDTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndTime.
     * @param value value to set the EndTime
     */
    public void setEndTime(Date value) {
        setAttributeInternal(ENDTIME, value);
    }

    /**
     * Gets the attribute value for MinEndBit, using the alias name MinEndBit.
     * @return the MinEndBit
     */
    public Number getMinEndBit() {
        return (Number)getAttributeInternal(MINENDBIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinEndBit.
     * @param value value to set the MinEndBit
     */
    public void setMinEndBit(Number value) {
        setAttributeInternal(MINENDBIT, value);
    }

    /**
     * Gets the attribute value for MinBunQty, using the alias name MinBunQty.
     * @return the MinBunQty
     */
    public Number getMinBunQty() {
        return (Number)getAttributeInternal(MINBUNQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinBunQty.
     * @param value value to set the MinBunQty
     */
    public void setMinBunQty(Number value) {
        setAttributeInternal(MINBUNQTY, value);
    }

    /**
     * Gets the attribute value for MaxBunQty, using the alias name MaxBunQty.
     * @return the MaxBunQty
     */
    public Number getMaxBunQty() {
        return (Number)getAttributeInternal(MAXBUNQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxBunQty.
     * @param value value to set the MaxBunQty
     */
    public void setMaxBunQty(Number value) {
        setAttributeInternal(MAXBUNQTY, value);
    }

    /**
     * Gets the attribute value for TimeCal, using the alias name TimeCal.
     * @return the TimeCal
     */
    public String getTimeCal() {
        return (String)getAttributeInternal(TIMECAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TimeCal.
     * @param value value to set the TimeCal
     */
    public void setTimeCal(String value) {
        setAttributeInternal(TIMECAL, value);
    }

    /**
     * Gets the attribute value for ActualConsumption, using the alias name ActualConsumption.
     * @return the ActualConsumption
     */
    public Number getActualConsumption() {
        return (Number)getAttributeInternal(ACTUALCONSUMPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualConsumption.
     * @param value value to set the ActualConsumption
     */
    public void setActualConsumption(Number value) {
        setAttributeInternal(ACTUALCONSUMPTION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgCutlyrcntrlD() {
        return (RowIterator)getAttributeInternal(MNJMFGCUTLYRCNTRLD);
    }

    /**
     * @return the associated entity MnjMfgCutlyrcntrlHImpl.
     */
    public MnjMfgCutlyrcntrlHImpl getMnjMfgCutlyrcntrlH() {
        return (MnjMfgCutlyrcntrlHImpl)getAttributeInternal(MNJMFGCUTLYRCNTRLH);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgCutlyrcntrlHImpl.
     */
    public void setMnjMfgCutlyrcntrlH(MnjMfgCutlyrcntrlHImpl value) {
        setAttributeInternal(MNJMFGCUTLYRCNTRLH, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgCutlyrcntrlBndLEO() {
        return (RowIterator)getAttributeInternal(MNJMFGCUTLYRCNTRLBNDLEO);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("MNJ_MFG_CUTLYRCNTRL_L_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
