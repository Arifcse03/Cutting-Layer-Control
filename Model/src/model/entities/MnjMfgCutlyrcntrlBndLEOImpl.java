package model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 10 16:36:20 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgCutlyrcntrlBndLEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("MNJ_MFG_CUTLYRCNTRL_BND_L_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DetailId {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        SizlineId {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getSizlineId();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setSizlineId((Number)value);
            }
        }
        ,
        Style {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getStyle();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        SizeValue {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getSizeValue();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setSizeValue((String)value);
            }
        }
        ,
        BundleNo {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getBundleNo();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setBundleNo((Number)value);
            }
        }
        ,
        FromPieceNo {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getFromPieceNo();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setFromPieceNo((Number)value);
            }
        }
        ,
        ToPieceNo {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getToPieceNo();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setToPieceNo((Number)value);
            }
        }
        ,
        Shade {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getShade();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setShade((String)value);
            }
        }
        ,
        SeqNo {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getSeqNo();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setSeqNo((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        TotalBundleQuantity {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getTotalBundleQuantity();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setTotalBundleQuantity((Number)value);
            }
        }
        ,
        MnjMfgCutlyrcntrlL {
            public Object get(MnjMfgCutlyrcntrlBndLEOImpl obj) {
                return obj.getMnjMfgCutlyrcntrlL();
            }

            public void put(MnjMfgCutlyrcntrlBndLEOImpl obj, Object value) {
                obj.setMnjMfgCutlyrcntrlL((MnjMfgCutlyrcntrlLImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgCutlyrcntrlBndLEOImpl object);

        public abstract void put(MnjMfgCutlyrcntrlBndLEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    //public static final int MNJMFGCUTLYRCNTRLH = AttributesEnum.MnjMfgCutlyrcntrlH.index();


    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int SIZLINEID = AttributesEnum.SizlineId.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int SIZEVALUE = AttributesEnum.SizeValue.index();
    public static final int BUNDLENO = AttributesEnum.BundleNo.index();
    public static final int FROMPIECENO = AttributesEnum.FromPieceNo.index();
    public static final int TOPIECENO = AttributesEnum.ToPieceNo.index();
    public static final int SHADE = AttributesEnum.Shade.index();
    public static final int SEQNO = AttributesEnum.SeqNo.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TOTALBUNDLEQUANTITY = AttributesEnum.TotalBundleQuantity.index();
    public static final int MNJMFGCUTLYRCNTRLL = AttributesEnum.MnjMfgCutlyrcntrlL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgCutlyrcntrlBndLEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.MnjMfgCutlyrcntrlBndLEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for SizlineId, using the alias name SizlineId.
     * @return the SizlineId
     */
    public Number getSizlineId() {
        return (Number)getAttributeInternal(SIZLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizlineId.
     * @param value value to set the SizlineId
     */
    public void setSizlineId(Number value) {
        setAttributeInternal(SIZLINEID, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for SizeValue, using the alias name SizeValue.
     * @return the SizeValue
     */
    public String getSizeValue() {
        return (String)getAttributeInternal(SIZEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SizeValue.
     * @param value value to set the SizeValue
     */
    public void setSizeValue(String value) {
        setAttributeInternal(SIZEVALUE, value);
    }

    /**
     * Gets the attribute value for BundleNo, using the alias name BundleNo.
     * @return the BundleNo
     */
    public Number getBundleNo() {
        return (Number)getAttributeInternal(BUNDLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BundleNo.
     * @param value value to set the BundleNo
     */
    public void setBundleNo(Number value) {
        setAttributeInternal(BUNDLENO, value);
    }

    /**
     * Gets the attribute value for FromPieceNo, using the alias name FromPieceNo.
     * @return the FromPieceNo
     */
    public Number getFromPieceNo() {
        return (Number)getAttributeInternal(FROMPIECENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromPieceNo.
     * @param value value to set the FromPieceNo
     */
    public void setFromPieceNo(Number value) {
        setAttributeInternal(FROMPIECENO, value);
    }

    /**
     * Gets the attribute value for ToPieceNo, using the alias name ToPieceNo.
     * @return the ToPieceNo
     */
    public Number getToPieceNo() {
        return (Number)getAttributeInternal(TOPIECENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToPieceNo.
     * @param value value to set the ToPieceNo
     */
    public void setToPieceNo(Number value) {
        setAttributeInternal(TOPIECENO, value);
    }

    /**
     * Gets the attribute value for Shade, using the alias name Shade.
     * @return the Shade
     */
    public String getShade() {
        return (String)getAttributeInternal(SHADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shade.
     * @param value value to set the Shade
     */
    public void setShade(String value) {
        setAttributeInternal(SHADE, value);
    }

    /**
     * Gets the attribute value for SeqNo, using the alias name SeqNo.
     * @return the SeqNo
     */
    public Number getSeqNo() {
        return (Number)getAttributeInternal(SEQNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SeqNo.
     * @param value value to set the SeqNo
     */
    public void setSeqNo(Number value) {
        setAttributeInternal(SEQNO, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for TotalBundleQuantity, using the alias name TotalBundleQuantity.
     * @return the TotalBundleQuantity
     */
    public Number getTotalBundleQuantity() {
        return (Number)getAttributeInternal(TOTALBUNDLEQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalBundleQuantity.
     * @param value value to set the TotalBundleQuantity
     */
    public void setTotalBundleQuantity(Number value) {
        setAttributeInternal(TOTALBUNDLEQUANTITY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgCutlyrcntrlLImpl.
     */
    public MnjMfgCutlyrcntrlLImpl getMnjMfgCutlyrcntrlL() {
        return (MnjMfgCutlyrcntrlLImpl)getAttributeInternal(MNJMFGCUTLYRCNTRLL);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgCutlyrcntrlLImpl.
     */
    public void setMnjMfgCutlyrcntrlL(MnjMfgCutlyrcntrlLImpl value) {
        setAttributeInternal(MNJMFGCUTLYRCNTRLL, value);
    }

    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }


    /**
     * @return the associated entity MnjMfgCutlyrcntrlHImpl.
     */
//    public MnjMfgCutlyrcntrlHImpl getMnjMfgCutlyrcntrlH() {
//        return (MnjMfgCutlyrcntrlHImpl)getAttributeInternal(MNJMFGCUTLYRCNTRLH);
//    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgCutlyrcntrlHImpl.
     */
//    public void setMnjMfgCutlyrcntrlH(MnjMfgCutlyrcntrlHImpl value) {
//        setAttributeInternal(MNJMFGCUTLYRCNTRLH, value);
//    }


}
