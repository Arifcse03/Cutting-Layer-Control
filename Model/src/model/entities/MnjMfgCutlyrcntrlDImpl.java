package model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 30 16:36:19 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgCutlyrcntrlDImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        DetailId {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        RollNo {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getRollNo();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setRollNo((String)value);
            }
        }
        ,
        RolLengthYds {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getRolLengthYds();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setRolLengthYds((Number)value);
            }
        }
        ,
        RolLengthInch {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getRolLengthInch();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setRolLengthInch((Number)value);
            }
        }
        ,
        Shrinkage {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getShrinkage();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setShrinkage((String)value);
            }
        }
        ,
        Shade {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getShade();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setShade((String)value);
            }
        }
        ,
        FabWeight {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getFabWeight();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setFabWeight((String)value);
            }
        }
        ,
        NoOfPly {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getNoOfPly();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setNoOfPly((Number)value);
            }
        }
        ,
        RemPly {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getRemPly();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setRemPly((Number)value);
            }
        }
        ,
        CutQty {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getCutQty();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setCutQty((Number)value);
            }
        }
        ,
        EndBitYds {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getEndBitYds();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setEndBitYds((Number)value);
            }
        }
        ,
        EndBitInch {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getEndBitInch();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setEndBitInch((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        SNo {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getSNo();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setSNo((Number)value);
            }
        }
        ,
        SuppRollNo {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getSuppRollNo();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setSuppRollNo((String)value);
            }
        }
        ,
        MnjMfgCutlyrcntrlL {
            public Object get(MnjMfgCutlyrcntrlDImpl obj) {
                return obj.getMnjMfgCutlyrcntrlL();
            }

            public void put(MnjMfgCutlyrcntrlDImpl obj, Object value) {
                obj.setMnjMfgCutlyrcntrlL((MnjMfgCutlyrcntrlLImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgCutlyrcntrlDImpl object);

        public abstract void put(MnjMfgCutlyrcntrlDImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int ROLLNO = AttributesEnum.RollNo.index();
    public static final int ROLLENGTHYDS = AttributesEnum.RolLengthYds.index();
    public static final int ROLLENGTHINCH = AttributesEnum.RolLengthInch.index();
    public static final int SHRINKAGE = AttributesEnum.Shrinkage.index();
    public static final int SHADE = AttributesEnum.Shade.index();
    public static final int FABWEIGHT = AttributesEnum.FabWeight.index();
    public static final int NOOFPLY = AttributesEnum.NoOfPly.index();
    public static final int REMPLY = AttributesEnum.RemPly.index();
    public static final int CUTQTY = AttributesEnum.CutQty.index();
    public static final int ENDBITYDS = AttributesEnum.EndBitYds.index();
    public static final int ENDBITINCH = AttributesEnum.EndBitInch.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SNO = AttributesEnum.SNo.index();
    public static final int SUPPROLLNO = AttributesEnum.SuppRollNo.index();
    public static final int MNJMFGCUTLYRCNTRLL = AttributesEnum.MnjMfgCutlyrcntrlL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgCutlyrcntrlDImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.MnjMfgCutlyrcntrlD");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for RollNo, using the alias name RollNo.
     * @return the RollNo
     */
    public String getRollNo() {
        return (String)getAttributeInternal(ROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollNo.
     * @param value value to set the RollNo
     */
    public void setRollNo(String value) {
        setAttributeInternal(ROLLNO, value);
    }

    /**
     * Gets the attribute value for RolLengthYds, using the alias name RolLengthYds.
     * @return the RolLengthYds
     */
    public Number getRolLengthYds() {
        return (Number)getAttributeInternal(ROLLENGTHYDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RolLengthYds.
     * @param value value to set the RolLengthYds
     */
    public void setRolLengthYds(Number value) {
        setAttributeInternal(ROLLENGTHYDS, value);
    }

    /**
     * Gets the attribute value for RolLengthInch, using the alias name RolLengthInch.
     * @return the RolLengthInch
     */
    public Number getRolLengthInch() {
        return (Number)getAttributeInternal(ROLLENGTHINCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for RolLengthInch.
     * @param value value to set the RolLengthInch
     */
    public void setRolLengthInch(Number value) {
        setAttributeInternal(ROLLENGTHINCH, value);
    }

    /**
     * Gets the attribute value for Shrinkage, using the alias name Shrinkage.
     * @return the Shrinkage
     */
    public String getShrinkage() {
        return (String)getAttributeInternal(SHRINKAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shrinkage.
     * @param value value to set the Shrinkage
     */
    public void setShrinkage(String value) {
        setAttributeInternal(SHRINKAGE, value);
    }

    /**
     * Gets the attribute value for Shade, using the alias name Shade.
     * @return the Shade
     */
    public String getShade() {
        return (String)getAttributeInternal(SHADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shade.
     * @param value value to set the Shade
     */
    public void setShade(String value) {
        setAttributeInternal(SHADE, value);
    }

    /**
     * Gets the attribute value for FabWeight, using the alias name FabWeight.
     * @return the FabWeight
     */
    public String getFabWeight() {
        return (String)getAttributeInternal(FABWEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FabWeight.
     * @param value value to set the FabWeight
     */
    public void setFabWeight(String value) {
        setAttributeInternal(FABWEIGHT, value);
    }

    /**
     * Gets the attribute value for NoOfPly, using the alias name NoOfPly.
     * @return the NoOfPly
     */
    public Number getNoOfPly() {
        return (Number)getAttributeInternal(NOOFPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfPly.
     * @param value value to set the NoOfPly
     */
    public void setNoOfPly(Number value) {
        setAttributeInternal(NOOFPLY, value);
    }

    /**
     * Gets the attribute value for RemPly, using the alias name RemPly.
     * @return the RemPly
     */
    public Number getRemPly() {
        return (Number)getAttributeInternal(REMPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemPly.
     * @param value value to set the RemPly
     */
    public void setRemPly(Number value) {
        setAttributeInternal(REMPLY, value);
    }

    /**
     * Gets the attribute value for CutQty, using the alias name CutQty.
     * @return the CutQty
     */
    public Number getCutQty() {
        return (Number)getAttributeInternal(CUTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CutQty.
     * @param value value to set the CutQty
     */
    public void setCutQty(Number value) {
        setAttributeInternal(CUTQTY, value);
    }

    /**
     * Gets the attribute value for EndBitYds, using the alias name EndBitYds.
     * @return the EndBitYds
     */
    public Number getEndBitYds() {
        return (Number)getAttributeInternal(ENDBITYDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndBitYds.
     * @param value value to set the EndBitYds
     */
    public void setEndBitYds(Number value) {
        setAttributeInternal(ENDBITYDS, value);
    }

    /**
     * Gets the attribute value for EndBitInch, using the alias name EndBitInch.
     * @return the EndBitInch
     */
    public Number getEndBitInch() {
        return (Number)getAttributeInternal(ENDBITINCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndBitInch.
     * @param value value to set the EndBitInch
     */
    public void setEndBitInch(Number value) {
        setAttributeInternal(ENDBITINCH, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SNo, using the alias name SNo.
     * @return the SNo
     */
    public Number getSNo() {
        return (Number)getAttributeInternal(SNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SNo.
     * @param value value to set the SNo
     */
    public void setSNo(Number value) {
        setAttributeInternal(SNO, value);
    }

    /**
     * Gets the attribute value for SuppRollNo, using the alias name SuppRollNo.
     * @return the SuppRollNo
     */
    public String getSuppRollNo() {
        return (String)getAttributeInternal(SUPPROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SuppRollNo.
     * @param value value to set the SuppRollNo
     */
    public void setSuppRollNo(String value) {
        setAttributeInternal(SUPPROLLNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgCutlyrcntrlLImpl.
     */
    public MnjMfgCutlyrcntrlLImpl getMnjMfgCutlyrcntrlL() {
        return (MnjMfgCutlyrcntrlLImpl)getAttributeInternal(MNJMFGCUTLYRCNTRLL);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgCutlyrcntrlLImpl.
     */
    public void setMnjMfgCutlyrcntrlL(MnjMfgCutlyrcntrlLImpl value) {
        setAttributeInternal(MNJMFGCUTLYRCNTRLL, value);
    }


    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("MNJ_MFG_CUTLYRCNTRL_D_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
