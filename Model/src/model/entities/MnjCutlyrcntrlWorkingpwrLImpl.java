package model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 22 14:59:55 BDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjCutlyrcntrlWorkingpwrLImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DivisionId {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getDivisionId();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setDivisionId((String)value);
            }
        }
        ,
        DetailId {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        SublineNo {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getSublineNo();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setSublineNo((String)value);
            }
        }
        ,
        WorkingHourBasic {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getWorkingHourBasic();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setWorkingHourBasic((String)value);
            }
        }
        ,
        ManpowerBasic {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getManpowerBasic();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setManpowerBasic((String)value);
            }
        }
        ,
        WorkingHourOvertime {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getWorkingHourOvertime();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setWorkingHourOvertime((String)value);
            }
        }
        ,
        ManpowerOvertime {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getManpowerOvertime();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setManpowerOvertime((String)value);
            }
        }
        ,
        WorkingHourExtraot1 {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getWorkingHourExtraot1();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setWorkingHourExtraot1((String)value);
            }
        }
        ,
        ManPowerExtraot1 {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getManPowerExtraot1();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setManPowerExtraot1((String)value);
            }
        }
        ,
        WorkingHourExtraot2 {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getWorkingHourExtraot2();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setWorkingHourExtraot2((String)value);
            }
        }
        ,
        ManPowerExtraot2 {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getManPowerExtraot2();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setManPowerExtraot2((String)value);
            }
        }
        ,
        Attribute9 {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getAttribute9();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setAttribute9((String)value);
            }
        }
        ,
        Attribute10 {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getAttribute10();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setAttribute10((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getBuyerId();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Season {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getSeason();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        Style {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getStyle();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Color {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getColor();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        MnjMfgCutlyrcntrlH {
            public Object get(MnjCutlyrcntrlWorkingpwrLImpl obj) {
                return obj.getMnjMfgCutlyrcntrlH();
            }

            public void put(MnjCutlyrcntrlWorkingpwrLImpl obj, Object value) {
                obj.setMnjMfgCutlyrcntrlH((MnjMfgCutlyrcntrlHImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjCutlyrcntrlWorkingpwrLImpl object);

        public abstract void put(MnjCutlyrcntrlWorkingpwrLImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int SUBLINENO = AttributesEnum.SublineNo.index();
    public static final int WORKINGHOURBASIC = AttributesEnum.WorkingHourBasic.index();
    public static final int MANPOWERBASIC = AttributesEnum.ManpowerBasic.index();
    public static final int WORKINGHOUROVERTIME = AttributesEnum.WorkingHourOvertime.index();
    public static final int MANPOWEROVERTIME = AttributesEnum.ManpowerOvertime.index();
    public static final int WORKINGHOUREXTRAOT1 = AttributesEnum.WorkingHourExtraot1.index();
    public static final int MANPOWEREXTRAOT1 = AttributesEnum.ManPowerExtraot1.index();
    public static final int WORKINGHOUREXTRAOT2 = AttributesEnum.WorkingHourExtraot2.index();
    public static final int MANPOWEREXTRAOT2 = AttributesEnum.ManPowerExtraot2.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int MNJMFGCUTLYRCNTRLH = AttributesEnum.MnjMfgCutlyrcntrlH.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjCutlyrcntrlWorkingpwrLImpl() {
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the DivisionId
     */
    public String getDivisionId() {
        return (String)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(String value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for SublineNo, using the alias name SublineNo.
     * @return the SublineNo
     */
    public String getSublineNo() {
        return (String)getAttributeInternal(SUBLINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SublineNo.
     * @param value value to set the SublineNo
     */
    public void setSublineNo(String value) {
        setAttributeInternal(SUBLINENO, value);
    }

    /**
     * Gets the attribute value for WorkingHourBasic, using the alias name WorkingHourBasic.
     * @return the WorkingHourBasic
     */
    public String getWorkingHourBasic() {
        return (String)getAttributeInternal(WORKINGHOURBASIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourBasic.
     * @param value value to set the WorkingHourBasic
     */
    public void setWorkingHourBasic(String value) {
        setAttributeInternal(WORKINGHOURBASIC, value);
    }

    /**
     * Gets the attribute value for ManpowerBasic, using the alias name ManpowerBasic.
     * @return the ManpowerBasic
     */
    public String getManpowerBasic() {
        return (String)getAttributeInternal(MANPOWERBASIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManpowerBasic.
     * @param value value to set the ManpowerBasic
     */
    public void setManpowerBasic(String value) {
        setAttributeInternal(MANPOWERBASIC, value);
    }

    /**
     * Gets the attribute value for WorkingHourOvertime, using the alias name WorkingHourOvertime.
     * @return the WorkingHourOvertime
     */
    public String getWorkingHourOvertime() {
        return (String)getAttributeInternal(WORKINGHOUROVERTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourOvertime.
     * @param value value to set the WorkingHourOvertime
     */
    public void setWorkingHourOvertime(String value) {
        setAttributeInternal(WORKINGHOUROVERTIME, value);
    }

    /**
     * Gets the attribute value for ManpowerOvertime, using the alias name ManpowerOvertime.
     * @return the ManpowerOvertime
     */
    public String getManpowerOvertime() {
        return (String)getAttributeInternal(MANPOWEROVERTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManpowerOvertime.
     * @param value value to set the ManpowerOvertime
     */
    public void setManpowerOvertime(String value) {
        setAttributeInternal(MANPOWEROVERTIME, value);
    }

    /**
     * Gets the attribute value for WorkingHourExtraot1, using the alias name WorkingHourExtraot1.
     * @return the WorkingHourExtraot1
     */
    public String getWorkingHourExtraot1() {
        return (String)getAttributeInternal(WORKINGHOUREXTRAOT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourExtraot1.
     * @param value value to set the WorkingHourExtraot1
     */
    public void setWorkingHourExtraot1(String value) {
        setAttributeInternal(WORKINGHOUREXTRAOT1, value);
    }

    /**
     * Gets the attribute value for ManPowerExtraot1, using the alias name ManPowerExtraot1.
     * @return the ManPowerExtraot1
     */
    public String getManPowerExtraot1() {
        return (String)getAttributeInternal(MANPOWEREXTRAOT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPowerExtraot1.
     * @param value value to set the ManPowerExtraot1
     */
    public void setManPowerExtraot1(String value) {
        setAttributeInternal(MANPOWEREXTRAOT1, value);
    }

    /**
     * Gets the attribute value for WorkingHourExtraot2, using the alias name WorkingHourExtraot2.
     * @return the WorkingHourExtraot2
     */
    public String getWorkingHourExtraot2() {
        return (String)getAttributeInternal(WORKINGHOUREXTRAOT2);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkingHourExtraot2.
     * @param value value to set the WorkingHourExtraot2
     */
    public void setWorkingHourExtraot2(String value) {
        setAttributeInternal(WORKINGHOUREXTRAOT2, value);
    }

    /**
     * Gets the attribute value for ManPowerExtraot2, using the alias name ManPowerExtraot2.
     * @return the ManPowerExtraot2
     */
    public String getManPowerExtraot2() {
        return (String)getAttributeInternal(MANPOWEREXTRAOT2);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPowerExtraot2.
     * @param value value to set the ManPowerExtraot2
     */
    public void setManPowerExtraot2(String value) {
        setAttributeInternal(MANPOWEREXTRAOT2, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgCutlyrcntrlHImpl.
     */
    public MnjMfgCutlyrcntrlHImpl getMnjMfgCutlyrcntrlH() {
        return (MnjMfgCutlyrcntrlHImpl)getAttributeInternal(MNJMFGCUTLYRCNTRLH);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgCutlyrcntrlHImpl.
     */
    public void setMnjMfgCutlyrcntrlH(MnjMfgCutlyrcntrlHImpl value) {
        setAttributeInternal(MNJMFGCUTLYRCNTRLH, value);
    }

    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.MnjCutlyrcntrlWorkingpwrL");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_CUTLYRCNTRL_WORKINGPWR_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
